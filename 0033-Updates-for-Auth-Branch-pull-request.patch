From cd8ba1400dadbef15567d7e681e695f4dc3e6cfe Mon Sep 17 00:00:00 2001
From: Caedmon Judd <caedmon@statebuilt.com>
Date: Wed, 26 Oct 2011 21:32:18 -0500
Subject: [PATCH 33/55] Updates for Auth Branch pull request

---
 app/assets/javascripts/reference.js.coffee |    3 +-
 app/controllers/notes_controller.rb        |   34 +++++---------
 app/helpers/notes_helper.rb                |   37 +++++----------
 app/models/note.rb                         |   68 +++++++++++++++++++++-------
 app/models/user.rb                         |    8 +++
 app/views/notes/_form.html.haml            |    4 +-
 app/views/notes/index.html.haml            |    2 +-
 app/views/notes/show.html.haml             |    2 +-
 features/notes.feature                     |    2 +-
 features/step_definitions/general_steps.rb |    2 +-
 fixtures/vcr/cuke/cucumber_tags/bible.yml  |   34 ++++++++++++++
 lib/yv_api.rb                              |   22 ---------
 12 files changed, 126 insertions(+), 92 deletions(-)

diff --git a/app/assets/javascripts/reference.js.coffee b/app/assets/javascripts/reference.js.coffee
index 4eaf4b1..2a5d841 100644
--- a/app/assets/javascripts/reference.js.coffee
+++ b/app/assets/javascripts/reference.js.coffee
@@ -1,4 +1,3 @@
 # Place all the behaviors and hooks related to the matching controller here.
 # All this logic will automatically be available in application.js.
-# You can use CoffeeScript in this file: http://jashkenas.github.com/coffee-script/
-efesf
\ No newline at end of file
+# You can use CoffeeScript in this file: http://jashkenas.github.com/coffee-script/
\ No newline at end of file
diff --git a/app/controllers/notes_controller.rb b/app/controllers/notes_controller.rb
index 730901b..a216a42 100644
--- a/app/controllers/notes_controller.rb
+++ b/app/controllers/notes_controller.rb
@@ -1,44 +1,35 @@
 class NotesController < ApplicationController
   
   def index    
-    @notes = Note.all(current_auth)    
+    @notes = Note.all(current_auth.id, current_auth)    
   end
 
   def show
     @note = Note.find(params[:id], current_auth)
-    @note.content = @note.content_html
     raise ActionController::RoutingError.new('Not Found') unless @note
   end
 
   def new
     @note = Note.new()
-    @url_path = notes_path
-    @url_method = :post
+    #@url_path = notes_path
+    #@url_method = :post
   end
         
   def edit
-    @note = Note.find(params[:id], current_auth)
-    @note.precontent = @note.content_html
-    @url_path = notes_path << '/' << params[:id]
-    @url_method = :put
-
-    ref = ''
-    @note.reference.each do |reference|
-      ref << reference.osis 
-    end
-    @note.reference = ref
+    @note = Note.find(params[:id], current_auth)    
+    #@url_path = notes_path << '/' << params[:id]
+    #@url_method = :put
   end
 
   def create
     @note = Note.new(params[:note])
     @note.auth = current_auth
 
-    if @return_note = @note.create
-      @note = @return_note
+    if @note.create
       render action: "show"
     else
-      @url_path = notes_path
-      @url_method = :post      
+      #@url_path = notes_path
+      #@url_method = :post      
       render action: "new"
     end    
   end
@@ -46,12 +37,11 @@ class NotesController < ApplicationController
   def update
     @note = Note.find(params[:id], current_auth)
 
-    if @return_note = @note.update(params[:id], params[:note])
-      @note = @return_note
+    if @note.update(params[:id], params[:note])
       render action: "show"
     else
-      @url_path = notes_path << '/' << params[:id]
-      @url_method = :put      
+      #@url_path = notes_path << '/' << params[:id]
+      #@url_method = :put      
       render action: "edit"
     end    
   end
diff --git a/app/helpers/notes_helper.rb b/app/helpers/notes_helper.rb
index ca5c30f..2d99ae9 100644
--- a/app/helpers/notes_helper.rb
+++ b/app/helpers/notes_helper.rb
@@ -9,29 +9,18 @@ module NotesHelper
     return_versions.sort
   end
   
-  def references_breakout(refs, version)
-    return_refs = ""
-
-    if refs
-      refs.each do |ref|
-        return_refs << link_to(ref.human << ' (' << version.upcase << ')', '/bible/' << ref.osis)
-      end
-      raw(return_refs)
-    else
-      ''
-    end
-  end
+  #def references_breakout(refs, version)
+  #  return_refs = ""
+  #  if refs
+      
+  #    refs.each do |ref|
+  #      return_refs << link_to("#{ref.human} (#{version.upcase})", "/bible/#{ref.osis}")
+  #    end
+  #    raw(return_refs)
+        
+  #  else
+  #    ''
+  #  end
+  #end
   
-  def references_link_breakout(refs)
-    return_refs = ""
-
-    if refs
-      refs.each do |ref|
-        return_refs << link_to(ref.human, '/bible/' << ref.osis) #TODO: Complete
-      end
-      raw(return_refs)
-    else
-      ''
-    end
-  end  
 end
diff --git a/app/models/note.rb b/app/models/note.rb
index 2afd199..188cb72 100644
--- a/app/models/note.rb
+++ b/app/models/note.rb
@@ -8,7 +8,7 @@ class Note
   attr_reader :errors
   
   def initialize(params = {})
-    reg_data = {title: "", content: "", precontent: "", language_iso: "", reference: "", version: "", published: "", user_status: "", share_connections: "", auth: nil}    
+    reg_data = {id: 0, title: "", content: "", language_iso: "", reference: "", version: "", published: "", user_status: "", share_connections: "", auth: nil}    
     reg_data.merge! params
     reg_data.each do |k,v|    
       # Create instance variable
@@ -20,15 +20,17 @@ class Note
     end
   end
   
-  def self.find(id, auth) 
+  def to_param    
+    id    
+  end
+  
+  def self.find(id, auth)
     response = YvApi.get('notes/view', {:id => id, :auth => auth} ) do |errors|     
       @errors = errors.map { |e| e["error"] }
       return false
     end
 
-    @note = Note.new(response)
-    @note.auth = auth
-    @note
+    build_object(response, auth)
   end
     
   def find(id, auth)
@@ -40,17 +42,17 @@ class Note
       @errors = errors.map { |e| e["error"] }
       return false
     end
-    
-    response    
+
+    response
   end
     
   def find_by_search(query)
     self.class.find_by_search(query, auth)
   end  
   
-  def self.all(auth)    
+  def self.all(user_id, auth)    
     if auth
-      response = YvApi.get('notes/items', {:user_id => auth.id, :auth => auth} ) do |errors|
+      response = YvApi.get('notes/items', {:user_id => user_id, :auth => auth} ) do |errors|
         @errors = errors.map { |e| e["error"] }
         return false
       end
@@ -60,16 +62,17 @@ class Note
         return false
       end
     end
-    response.notes    
+
+    build_objects(response.notes, auth)
   end
   
-  def all(auth)
-    self.class.all(auth)
+  def all(user_id, auth)
+    self.class.all(user_id, auth)
   end
     
   def create
     @token = Digest::MD5.hexdigest "#{auth.username}.Yv6-#{auth.password}"
-    @content = '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE yv-note SYSTEM "http://' << Cfg.api_root << '/pub/yvml_1_0.dtd"><yv-note>' << @precontent << '</yv-note>'
+    @content = '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE yv-note SYSTEM "http://' << Cfg.api_root << '/pub/yvml_1_0.dtd"><yv-note>' << @content << '</yv-note>'
     @reference = @reference.gsub('+', '%2b')
 
     response = YvApi.post('notes/create', attributes(:title, :content, :language_iso, :reference, :version,
@@ -77,13 +80,14 @@ class Note
       @errors = errors.map { |e| e["error"] }      
       return false
     end
+    id = response.id    
     response
   end
   
   def update(id, fields)
     save_values(fields)
     @token = Digest::MD5.hexdigest "#{auth.username}.Yv6-#{auth.password}"
-    @content = '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE yv-note SYSTEM "http://' << Cfg.api_root << '/pub/yvml_1_0.dtd"><yv-note>' << @precontent << '</yv-note>'
+    @content = '<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE yv-note SYSTEM "http://' << Cfg.api_root << '/pub/yvml_1_0.dtd"><yv-note>' << @content << '</yv-note>'
     @reference = @reference.gsub('+', '%2b')
 
     response = YvApi.post('notes/update', attributes(:id, :title, :content, :language_iso, :reference, :version,
@@ -125,6 +129,38 @@ class Note
       # Create the setter
       self.class.send(:define_method, "#{k}=", proc{|v| self.instance_variable_set("@#{k}", v)})
     end    
-  end 
-    
+  end
+  
+  def self.build_object(response, auth)
+    @note = Note.new(response)
+    @note.auth = auth
+    #@note.content = @note.content_html
+    @note.content = @note.content_text
+    @note.reference = hash_to_osis(@note.reference)
+    @note
+  end
+  
+  def self.build_objects(response, auth)
+    @return_notes = []
+    response.each do |note|
+      @note = Note.new(note)
+      @note.auth = auth
+      #@note.content = @note.content_html
+      @note.content = @note.content_text
+      @note.reference = hash_to_osis(@note.reference)
+      @return_notes << @note      
+    end
+    @return_notes
+  end
+  
+  # PARM (values): Array of Reference hashies
+  # RETURN: String in OSIS format
+  def self.hash_to_osis(values) 
+    return_val = ""
+    values.each do |ref|
+      return_val << "#{ref.osis}+"
+    end
+    return_val[0..-2]
+  end
+      
 end
diff --git a/app/models/user.rb b/app/models/user.rb
index 3e77b33..452a3c9 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -42,6 +42,14 @@ class User
     User.new(response)
   end
 
+  def self.notes(id, auth)
+    Note.all(id, auth)
+  end
+  
+  def notes(auth)
+    self.class.Note.all(id, auth)
+  end
+  
   def save
     @token = Digest::MD5.hexdigest "#{@username}.Yv6-#{@password}"
     @secure = true
diff --git a/app/views/notes/_form.html.haml b/app/views/notes/_form.html.haml
index 7587dad..b738771 100644
--- a/app/views/notes/_form.html.haml
+++ b/app/views/notes/_form.html.haml
@@ -1,4 +1,4 @@
-= form_for @note, :url => @url_path, :method => @url_method do |f|
+= form_for @note do |f|
   - if @note.errors
     .form_errors
       The following error(s) prevented creation of your note:
@@ -10,7 +10,7 @@
     = f.text_field :title
   %p
     = f.label :content, "Content:"
-    = f.text_area :precontent
+    = f.text_area :content
   %p
     = f.label :version, "Version:"
     = f.select :version, options_for_select(versions_dropdown, @note.version), {:prompt => '--Select--'}
diff --git a/app/views/notes/index.html.haml b/app/views/notes/index.html.haml
index 172ff9a..6f7fb6f 100644
--- a/app/views/notes/index.html.haml
+++ b/app/views/notes/index.html.haml
@@ -5,7 +5,7 @@
       %div{id: note.id}
         %div{class: "title"}= link_to note.title, note_path(note.id)
         %div{class: "content"}= note.content_text
-        %div{class: "reference"}= references_breakout(note.reference, note.version)
+        %div{class: "reference"}= note.reference
         %div{class: "status"}= note.user_status
   - else
     %div{class: "none"}= "Sorry, no notes here!"
\ No newline at end of file
diff --git a/app/views/notes/show.html.haml b/app/views/notes/show.html.haml
index 26f80fe..1c0df40 100644
--- a/app/views/notes/show.html.haml
+++ b/app/views/notes/show.html.haml
@@ -7,7 +7,7 @@
   = label_tag :version, "Note Version:"
   = @note.version
   = label_tag :reference, "Note Reference:"
-  = references_link_breakout(@note.reference)
+  = @note.reference
   = label_tag :user_status, "Note Status:"
   = @note.user_status
   = link_to 'edit', edit_note_path(@note.id)
diff --git a/features/notes.feature b/features/notes.feature
index 03343a3..38f508c 100644
--- a/features/notes.feature
+++ b/features/notes.feature
@@ -9,7 +9,7 @@ Feature: Notes view
     And I am logged in as "testuser" with password "tenders" 
     When I go to the new note page
     And I fill in "Title" with "Public Note" 
-    And I fill in "note_precontent" with "Public Content" 
+    And I fill in "note_content" with "Public Content" 
     And I select "King James Version" from the dropdown "note_version"
     And I fill in "Reference" with "gen.1.1" 
     And I select "Public" from the dropdown "note_user_status"
diff --git a/features/step_definitions/general_steps.rb b/features/step_definitions/general_steps.rb
index c52071a..39cfe12 100644
--- a/features/step_definitions/general_steps.rb
+++ b/features/step_definitions/general_steps.rb
@@ -37,5 +37,5 @@ When /^I select "([^"]*)" from the dropdown "([^"]*)"$/ do |arg1, arg2|
 end
 
 When /^I click "([^"]*)"$/ do |arg1|
-  click_button "Save"
+  click_button arg1
 end
diff --git a/fixtures/vcr/cuke/cucumber_tags/bible.yml b/fixtures/vcr/cuke/cucumber_tags/bible.yml
index afd6028..8f75c80 100644
--- a/fixtures/vcr/cuke/cucumber_tags/bible.yml
+++ b/fixtures/vcr/cuke/cucumber_tags/bible.yml
@@ -1140,3 +1140,37 @@
       it was morning-Day Six.<\/span><\/p><\/div>\n","audio":null},"previous":"","next":{"reference":{"osis":"Gen.2","human":"Genesis
       2"}}},"buildtime":"2011-10-25T21:20:29+00:00"}],"buildtime":"2011-10-25T21:20:29+00:00"}}'
     http_version: '1.1'
+- !ruby/struct:VCR::HTTPInteraction
+  request: !ruby/struct:VCR::Request
+    method: :post
+    uri: http://testuser:tenders@api.yvdev.com:80/2.3/notes/create.json
+    body: title=A%20Different%20Public%20Note&content=%3C%3Fxml%20version%3D%221.0%22%20encoding%3D%22UTF-8%22%3F%3E%3C!DOCTYPE%20yv-note%20SYSTEM%20%22http%3A%2F%2Fapi.yvdev.com%2Fpub%2Fyvml_1_0.dtd%22%3E%3Cyv-note%3EPublic%20Content%3C%2Fyv-note%3E&language_iso=&reference=Gen.1.1&version=kjv&published=&user_status=public&shared_connections=&token=615ad51b71049e299842f5af14c70cad
+    headers:
+      referer:
+      - http://web.youversion.com
+  response: !ruby/struct:VCR::Response
+    status: !ruby/struct:VCR::ResponseStatus
+      code: 200
+      message: OK
+    headers:
+      server:
+      - nginx/0.7.67
+      date:
+      - Thu, 27 Oct 2011 02:09:24 GMT
+      content-type:
+      - text/plain
+      - text/plain; charset=utf-8
+      transfer-encoding:
+      - chunked
+      connection:
+      - keep-alive
+      vary:
+      - Accept-Encoding
+    body: ! '{"response":{"code":201,"data":{"id":"935888","user_id":"4163177","username":"testuser","user_avatar_url":{"px_24x24":"http:\/\/avatars.youversion.com\/5d9c68c6c50ed3d02a2fcf54f63993b6_24x24.png","px_48x48":"http:\/\/avatars.youversion.com\/5d9c68c6c50ed3d02a2fcf54f63993b6_48x48.png","px_128x128":"http:\/\/avatars.youversion.com\/5d9c68c6c50ed3d02a2fcf54f63993b6_128x128.png","px_512x512":"http:\/\/avatars.youversion.com\/5d9c68c6c50ed3d02a2fcf54f63993b6_512x512.png"},"title":"A
+      Different Public Note","highlight_color":null,"content_yvml":"<?xml version=\"1.0\"
+      encoding=\"utf-8\"?>\n<!DOCTYPE yv-note SYSTEM \"http:\/\/api.yvdev.com\/pub\/yvml_1_0.dtd\">\n<yv-note>Public
+      Content<\/yv-note>","content_html":"Public Content","content_html_android":"Public
+      Content","content_html_ios":"Public Content","content_text":"Public Content","url":"\/notes\/935888\/a-different-public-note","short_url":"http:\/\/dev.read.ly\/n\/3vSy","rich_content":false,"language_iso":null,"rank":"0","reference":[{"osis":"Gen.1.1","human":"Genesis
+      1:1"}],"version":"kjv","created":"2011-10-27 02:09:24+00","published":null,"updated":"2011-10-27
+      02:09:24.350295+00","user_status":"public","system_status":"new"},"buildtime":"2011-10-27T02:09:24+00:00"}}'
+    http_version: '1.1'
diff --git a/lib/yv_api.rb b/lib/yv_api.rb
index 46591ed..d58bfc5 100644
--- a/lib/yv_api.rb
+++ b/lib/yv_api.rb
@@ -28,8 +28,6 @@ class YvApi
     # Figure out if we should cache
     cache_length = opts.delete(:cache_for)
         
-    begin
-      
     # If we should cache, try pulling from cache first
     if cache_length
       cache_key = {p: path, q: opts}
@@ -42,15 +40,6 @@ class YvApi
       response = httparty_get(base + path, query: opts)
     end
 
-    rescue => e
-      puts 'DEBUG--------------------------------------------------------------------'
-      puts path
-      puts opts
-      puts e.message
-      #puts e.backtrace
-      puts 'END DEBUG----------------------------------------------------------------'
-    end
-
     # Check the API response for error code
     return api_response_or_rescue(response, block)
   end
@@ -72,19 +61,8 @@ class YvApi
     # Set the base URL
     base = (protocol + "://" + Cfg.api_root + "/" + Cfg.api_version)
     
-    begin    
-    
     response = httparty_post(base + path, body: opts)
     
-    rescue => e
-      puts 'DEBUG--------------------------------------------------------------------'
-      puts path
-      puts opts
-      puts e.message
-      #puts e.backtrace
-      puts 'END DEBUG----------------------------------------------------------------'
-    end
-  
     return api_response_or_rescue(response, block)
   end
 
-- 
1.7.0.4

