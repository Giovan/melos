From 2b7e1022d58c229011400d28825844d8b3f94a28 Mon Sep 17 00:00:00 2001
From: Caedmon Judd <caedmon@statebuilt.com>
Date: Fri, 28 Oct 2011 09:06:32 -0500
Subject: [PATCH 38/55] Renamed general module to model

---
 app/models/note.rb       |    4 ++--
 app/models/user.rb       |    2 +-
 lib/general.rb           |   39 ---------------------------------------
 lib/model.rb             |   39 +++++++++++++++++++++++++++++++++++++++
 spec/models/note_spec.rb |   35 +++++++++++++++++++++++++++++++++++
 5 files changed, 77 insertions(+), 42 deletions(-)
 delete mode 100644 lib/general.rb
 create mode 100644 lib/model.rb
 create mode 100644 spec/models/note_spec.rb

diff --git a/app/models/note.rb b/app/models/note.rb
index 1ccbd33..5d1ae6f 100644
--- a/app/models/note.rb
+++ b/app/models/note.rb
@@ -1,7 +1,7 @@
 class Note
   extend ActiveModel::Naming
   include ActiveModel::Conversion
-  include General
+  include Model
   def persisted?
     false
   end
@@ -108,7 +108,7 @@ class Note
     @note.auth = auth
     #@note.content = @note.content_html
     @note.content = @note.content_text
-    @note.reference = General::hash_to_osis(@note.reference)
+    @note.reference = Model::hash_to_osis(@note.reference)
     @note
   end
   
diff --git a/app/models/user.rb b/app/models/user.rb
index 51d135d..342a20b 100644
--- a/app/models/user.rb
+++ b/app/models/user.rb
@@ -3,7 +3,7 @@ require 'digest/md5'
 class User
   extend ActiveModel::Naming
   include ActiveModel::Conversion
-  include General
+  include Model
   attr_accessor :username, :password
   def persisted?
     false
diff --git a/lib/general.rb b/lib/general.rb
deleted file mode 100644
index 2e4092c..0000000
--- a/lib/general.rb
+++ /dev/null
@@ -1,39 +0,0 @@
-module General
-  
-  def initialize_class(instance, params = {}, reg_data)
-    reg_data.merge! params
-    set_class_values(instance, reg_data)
-  end
-  
-  def set_class_values(instance, values)
-    values.each do |k,v|    
-      # Create instance variable
-      self.instance_variable_set("@#{k}", v)
-      # Create the getter
-      self.class.send(:define_method, k, proc{self.instance_variable_get("@#{k}")})
-      # Create the setter
-      self.class.send(:define_method, "#{k}=", proc{|v| self.instance_variable_set("@#{k}", v)})
-    end    
-  end
-  
-  def class_attributes(*args)
-    array = args
-    array = self.instance_variables.map { |e| e.to_s.gsub("@", "").to_sym} if array == []
-    attrs = {}
-    array.each do |var|
-      attrs[var] = instance_variable_get("@#{var}")
-    end
-    attrs
-  end
-  
-  # PARM (values): Array of Reference hashies
-  # RETURN: String in OSIS format
-  def hash_to_osis(values) 
-    return_val = ""
-    values.each do |ref|
-      return_val << "#{ref.osis}+"
-    end
-    return_val[0..-2]
-  end
-  
-end
diff --git a/lib/model.rb b/lib/model.rb
new file mode 100644
index 0000000..2fc43ae
--- /dev/null
+++ b/lib/model.rb
@@ -0,0 +1,39 @@
+module Model
+  
+  def initialize_class(instance, params = {}, reg_data)
+    reg_data.merge! params
+    set_class_values(instance, reg_data)
+  end
+  
+  def set_class_values(instance, values)
+    values.each do |k,v|    
+      # Create instance variable
+      self.instance_variable_set("@#{k}", v)
+      # Create the getter
+      self.class.send(:define_method, k, proc{self.instance_variable_get("@#{k}")})
+      # Create the setter
+      self.class.send(:define_method, "#{k}=", proc{|v| self.instance_variable_set("@#{k}", v)})
+    end    
+  end
+  
+  def class_attributes(*args)
+    array = args
+    array = self.instance_variables.map { |e| e.to_s.gsub("@", "").to_sym} if array == []
+    attrs = {}
+    array.each do |var|
+      attrs[var] = instance_variable_get("@#{var}")
+    end
+    attrs
+  end
+  
+  # PARM (values): Array of Reference hashies
+  # RETURN: String in OSIS format
+  def self.hash_to_osis(values) 
+    return_val = ""
+    values.each do |ref|
+      return_val << "#{ref.osis}+"
+    end
+    return_val[0..-2]
+  end
+  
+end
diff --git a/spec/models/note_spec.rb b/spec/models/note_spec.rb
new file mode 100644
index 0000000..14227d4
--- /dev/null
+++ b/spec/models/note_spec.rb
@@ -0,0 +1,35 @@
+require 'spec_helper'
+
+describe Note do
+  use_vcr_cassette "note"
+
+  before :all do
+    @auth = { id: 4163176,
+               username: "testuser2",
+               password: "tenders"
+            }
+  end
+  
+  describe ".find" do
+    it 'returns true after finding a Note' do
+      @note = Note.find('935850', @auth) 
+      @note.title.should = 'Public Note'
+      @note.version.should = 'kjv'
+      @note.reference.should = 'Gen.1.1'
+      @note.user_status.should = 'public'
+    end
+
+    it 'returns false if Note was not found' do
+      @note = Note.find('0', @auth) 
+      @note.should be_false
+    end        
+  end
+  
+  describe ".find_by_search" do
+    @notes = Note.find_by_search('Title', @auth)
+    
+  
+  
+  end
+  
+end
-- 
1.7.0.4

