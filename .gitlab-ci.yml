# This file is a template, and might need editing before it works on your project.
# Explaination on the scripts:
# https://gitlab.com/gitlab-examples/kubernetes-deploy/blob/master/README.md
image: quay.io/lifechurch/k8s-deploy-helper:5.0.0

variables:
  # Application deployment domain
  KUBE_DOMAIN: bible.com

stages:
  - build
  - test
  - review
  - staging
  - canary
  - destroy-canary
  - production
  - taglatest

build legacy:
  stage: build
  script:
    - command build
  only:
    - branches
  except:
    - l10n_master
  tags:
    - web

build nodejs:
  stage: build
  script:
    - command build Dockerfile-nodejs
  only:
    - branches
  except:
    - l10n_master
  tags:
    - web

build elaphros:
  stage: build
  script:
    - command build Dockerfile-elaphros
  only:
    - branches
  except:
    - l10n_master
  tags:
    - web

review:
  stage: review
  variables:
    CI_ENVIRONMENT_URL: http://$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN
    REVIEW_SECURE_HOSTNAME: nodejs-$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN
  script:
    - export SHORT=$(echo "${CI_COMMIT_REF_SLUG//-}" | cut -c-14)
    - export REVIEW_MEMCACHE_SERVERS=$SHORT-memcached.bible.svc.cluster.local:11211
    - export REVIEW_MY_SUBDOMAIN=my-$CI_ENVIRONMENT_SLUG.
    - export REVIEW_WWW_SUBDOMAIN=$CI_ENVIRONMENT_SLUG.
    - command deploy
    - helm init --client-only
    - helm repo update
    - helm list | grep $SHORT || helm install --name $SHORT --set memcached.verbosity=v --set memcached.maxItemMemory=100 stable/memcached --version 0.4.1 --namespace $KUBE_NAMESPACE --replace
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: http://$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN
    on_stop: stop_review
  only:
    - branches
  except:
    - master
    - l10n_master
  tags:
    - web

stop_review:
  stage: review
  variables:
    GIT_STRATEGY: none
  script:
    - command destroy
    - command destroy app=elaphros-$CI_ENVIRONMENT_SLUG
    - command destroy app=nodejs-$CI_ENVIRONMENT_SLUG
    - export SHORT=$(echo "${CI_COMMIT_REF_SLUG//-}" | cut -c-14)
    - helm delete $SHORT
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  only:
    - branches
  except:
    - master
    - l10n_master
  tags:
    - web

staging:
  stage: staging
  variables:
    CI_ENVIRONMENT_URL: http://staging.$KUBE_DOMAIN
    STAGING_SECURE_HOSTNAME: nodejs-staging.$KUBE_DOMAIN
  script:
    - command deploy
    - export POD=$(kubectl get pods -n=bible | grep bible-staging-memcach | awk '{print $1}')
    - kubectl exec $POD -n=bible -- bash -c "echo flush_all > /dev/tcp/127.0.0.1/11211 && echo stats reset > /dev/tcp/127.0.0.1/11211"
  environment:
    name: staging
    url: http://staging.$KUBE_DOMAIN
  only:
    - master
  tags:
    - web

canary:
  stage: canary
  dependencies: []
  script:
    - command deploy
  when: manual
  only:
    - master
  allow_failure: true
  environment:
    name: production
    url: https://$KUBE_DOMAIN

destroy-canary:
  stage: destroy-canary
  dependencies: []
  allow_failure: true
  environment:
    name: production
  script:
    - command destroy-canary
  when: manual
  only:
    - master

production:
  stage: production
  variables:
    CI_ENVIRONMENT_URL: http://$KUBE_DOMAIN
    PRODUCTION_SECURE_HOSTNAME: nodejs.$KUBE_DOMAIN
  script:
    - command deploy
    - echo "flush_all" | nc $PRODUCTION_MEMCACHE_SERVERS 11211
    - 'curl -X POST "https://api.cloudflare.com/client/v4/zones/7e7e37b9128054e59b31bd42a9ef887c/purge_cache" -H "X-Auth-Email: will.platnick@lifechurch.tv" -H "X-Auth-Key: $CLOUDFLARE" -H "Content-Type: application/json" --data ''{"purge_everything":true}'''
  environment:
    name: production
    url: http://$KUBE_DOMAIN
  when: manual
  allow_failure: false
  only:
    - master
  tags:
    - yv-gke

taglatest:
  stage: taglatest
  dependencies: []
  allow_failure: false
  script:
    - command push
  only:
    - master
  tags:
    - web
