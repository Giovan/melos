From 05252ed66c63dec18a8d509a6e8bc2c2ab3b6f67 Mon Sep 17 00:00:00 2001
From: Caedmon Judd <caedmon@statebuilt.com>
Date: Sun, 6 Nov 2011 20:00:32 -0600
Subject: [PATCH 47/55] Adding like model

---
 Gemfile.lock                              |    4 +-
 app/controllers/notes_controller.rb       |    6 ++
 app/models/like.rb                        |   96 +++++++++++++++++++++++++++++
 app/models/note.rb                        |   14 ++---
 app/views/notes/show.html.haml            |    2 +-
 db/migrate/20111107013043_create_likes.rb |    8 +++
 spec/models/like_spec.rb                  |    5 ++
 7 files changed, 124 insertions(+), 11 deletions(-)
 create mode 100644 app/models/like.rb
 create mode 100644 db/migrate/20111107013043_create_likes.rb
 create mode 100644 spec/models/like_spec.rb

diff --git a/Gemfile.lock b/Gemfile.lock
index a63ac7c..9bd6f92 100644
--- a/Gemfile.lock
+++ b/Gemfile.lock
@@ -196,7 +196,7 @@ GEM
     sprockets (2.0.3)
       hike (~> 1.2)
       rack (~> 1.0)
-      tilt (!= 1.3.0, ~> 1.1)
+      tilt (~> 1.1, != 1.3.0)
     term-ansicolor (1.0.7)
     thor (0.14.6)
     tilt (1.3.3)
@@ -211,7 +211,7 @@ GEM
       multi_json (>= 1.0.2)
     vcr (1.11.3)
     webmock (1.7.7)
-      addressable (> 2.2.5, ~> 2.2)
+      addressable (~> 2.2, > 2.2.5)
       crack (>= 0.1.7)
     xpath (0.1.4)
       nokogiri (~> 1.3)
diff --git a/app/controllers/notes_controller.rb b/app/controllers/notes_controller.rb
index 9e460e5..4960cae 100644
--- a/app/controllers/notes_controller.rb
+++ b/app/controllers/notes_controller.rb
@@ -62,6 +62,12 @@ class NotesController < ApplicationController
     end
   end
 
+  def like
+    if Like.like(params[:id])
+      render action: "show"
+    end
+  end
+
   private
 
   def set_nav
diff --git a/app/models/like.rb b/app/models/like.rb
new file mode 100644
index 0000000..abf56b7
--- /dev/null
+++ b/app/models/like.rb
@@ -0,0 +1,96 @@
+class Like
+  extend ActiveModel::Naming
+  include ActiveModel::Conversion
+  include Model
+  def persisted?
+    return !id.blank?
+  end
+
+  attr_reader :errors
+
+  def initialize(params = {})
+    reg_data = {id: nil, note_id: nil, auth: nil}
+    initialize_class(self, params, reg_data)
+  end
+
+  def to_param
+    puts "listening"
+    id
+  end
+
+  def self.like(note_id, auth = nil)
+
+    #1) Look up the like for the note
+    #2) Determine if this is a Like or an Un-Like
+    #3) Write the update
+
+  end
+
+  def like(note_id, auth)
+    self.class.like(note_id, auth)
+  end
+
+  def self.find(user_id, auth = nil)
+    response = YvApi.get('likes/items', user_id: user_id ) do |e|   # anonymous
+      YvApi.get('likes/items', user_id: user_id, auth: auth) do |e| # auth'ed
+        @errors = errors.map { |e| e["error"] }
+        return false
+      end
+    end
+
+    build_objects(response.likes, auth)
+  end
+
+  def find(user_id, auth)
+    self.class.find(user_id, auth)
+  end
+
+  def self.all
+    response = YvApi.get('likes/items') do |errors|
+      @errors = errors.map { |e| e["error"] }
+      return false
+    end
+
+    build_objects(response.likes, nil)
+  end
+
+  def all
+    self.class.all
+  end
+
+  def create
+    @token = Digest::MD5.hexdigest "#{auth.username}.Yv6-#{auth.password}"
+
+    response = YvApi.post('likes/create', class_attributes(:note_id, :token, :auth)) do |errors|
+      @errors = errors.map { |e| e["error"] }
+      return false
+    end
+    @id = response.id
+    response
+  end
+
+  def destroy
+    response = YvApi.post('likes/delete', class_attributes(:note_id, :auth)) do |errors|
+      @errors = errors.map { |e| e["error"] }
+      return false
+    end
+    response
+  end
+
+  private
+
+  def self.build_object(response, auth)
+    @like = Like.new(response)
+    @like.auth = auth
+    @like
+  end
+
+  def self.build_objects(response, auth)
+    @return_likes = []
+    response.each do |like|
+      @return_likes << build_object(like, auth)
+    end
+    @return_likes
+  end
+
+end
diff --git a/app/models/note.rb b/app/models/note.rb
index 9fd5776..2fb2bde 100644
--- a/app/models/note.rb
+++ b/app/models/note.rb
@@ -43,8 +43,8 @@ class Note
     build_objects(response.notes, nil)
   end
   
-  def all(user_id)
-    self.class.all(auth)
+  def all
+    self.class.all
   end
 
   def self.for_user(user_id, auth)
@@ -82,10 +82,10 @@ class Note
     end
     @id = response.id
     @version = Version.new(response.version)
-    @reference = Reference.new("#{Model::hash_to_osis(response.reference)}.#{response.version}")
+    @reference = response.reference
     response
   end
-  
+
   def update(id, fields)
     set_class_values(self, fields)
     @token = Digest::MD5.hexdigest "#{auth.username}.Yv6-#{auth.password}"
@@ -100,13 +100,11 @@ class Note
       return false
     end
     @version = Version.new(response.version)
-    @reference = Reference.new("#{Model::hash_to_osis(response.reference)}.#{response.version}")
+    @reference = response.reference
     response
   end
-  
+
   def destroy
-    @token = Digest::MD5.hexdigest "#{auth.username}.Yv6-#{auth.password}"
-    
     response = YvApi.post('notes/delete', class_attributes(:id, :auth)) do |errors|
       @errors = errors.map { |e| e["error"] }
       return false
diff --git a/app/views/notes/show.html.haml b/app/views/notes/show.html.haml
index 1d155de..6c3f717 100644
--- a/app/views/notes/show.html.haml
+++ b/app/views/notes/show.html.haml
@@ -1,7 +1,7 @@
 %article
   #note
     %h1= @note.title
-    %p.mute= link_to_references(@note.references)
+    %p.mute= link_to_references(@note.reference)
     %p= raw(@note.content)
     %p
       = label_tag :user_status, "Note Status:"
diff --git a/db/migrate/20111107013043_create_likes.rb b/db/migrate/20111107013043_create_likes.rb
new file mode 100644
index 0000000..2db28b3
--- /dev/null
+++ b/db/migrate/20111107013043_create_likes.rb
@@ -0,0 +1,8 @@
+class CreateLikes < ActiveRecord::Migration
+  def change
+    create_table :likes do |t|
+
+      t.timestamps
+    end
+  end
+end
diff --git a/spec/models/like_spec.rb b/spec/models/like_spec.rb
new file mode 100644
index 0000000..6250a33
--- /dev/null
+++ b/spec/models/like_spec.rb
@@ -0,0 +1,5 @@
+require 'spec_helper'
+
+describe Like do
+  pending "add some examples to (or delete) #{__FILE__}"
+end
-- 
1.7.0.4

