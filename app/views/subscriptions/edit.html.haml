:ruby
  @title = t("plans.plan settings")
  subscription = @presenter.subscription
  html_attributes(id: "subscriptions-edit")

- content_for :mobile_right_nav do
  =link_to t('plans.overview'), plan_path(subscription), class: 'info_btn'

.tab_navigation.plan_settings.mobile
  .inner_wrapper
    = link_to t("plans.settings"), edit_user_subscription_path(current_user, subscription),{class: "selected"}
    = link_to t("plans.month"), calendar_user_subscription_path(current_user, subscription)

%article
  %h1= t("plans.settings")
  %h2.mobile= subscription.title

  %ul.settings
    %li#delivery-settings
      %div.wrapper
        %div.controls
          = button_to(subscription.delivered_by_email? ? t('plans.email_off') : t('plans.email_on'),  user_subscription_path(current_user, subscription, email_delivery: (!subscription.delivered_by_email?).to_s), method: :put, class: 'action_button_green')
          -if subscription.delivered_by_email?
            %div
              %p
              = subscription.user.email
              %span
                = link_to(t("plans.email edit"), email_user_path(current_user))

        %div.info
          %h3= t("plans.email delivery")
          %p= t("plans.email delivery text")

      -if subscription.delivered_by_email?

        = form_tag(user_subscription_path(current_user, subscription), method: :put) do
          %div.time
            %h4.info= t("plans.delivery time")
            %div.controls
              %select{onChange: "this.form.submit()", name: "email_delivery"}
                - ["morning","afternoon","evening"].each do |time|
                  %option{value: time, selected: time == subscription.email_delivery_time_range}= t("plan.#{time}")

          %div.version
            %h4.info= t("plans.delivery version")
            %div.controls
              %select{onChange: "this.form.submit()", name: "version"}
                - Version.all_by_language.each do |k, v|
                  %optgroup{label: Version.languages[k]}
                  - v.each do |v|
                    %option{value: v.id, selected: v.id == subscription.email_delivery_version_id}= v

    %li#catchup-settings
      %div.controls
        = button_to(t('plans.catch me up'), user_subscription_path(current_user,subscription,catch_up: "true"), method: :put, class: 'action_button_green')
      %div.info
        %h3= t("plans.are you behind")
        - catch_up_text = subscription.last_completed_date ? t("plans.catch up text", last_completed_day: subscription.last_completed_day) : t("plans.catch up description only")
        %p= catch_up_text

    %li#restart-settings
      %div.controls
        = button_to(t('plans.restart'), user_subscription_path(current_user,subscription,restart: "true"), method: :put, class: 'action_button_green confirm', "data-confirm-text" => t("confirm danger"))
      %div.info
        %h3= t("plans.do you want to reset")
        %p= t("plans.restart description")

    %li#privacy-settings
      %a{name: "privacy"}
      %div.controls
        -if subscription.public?
          = button_to(t('plans.make private'), user_subscription_path(current_user,subscription,make_private: "true"), method: :put, class: 'action_button_green')
        -else
          = button_to(t('plans.make public'), user_subscription_path(current_user,subscription,make_public: "true"), method: :put, class: 'action_button_green')
      %div.info
        %h3= t("plans.privacy title")
        %p= t("plans.privacy description")

    %li#accountability-settings
      %a{name: "accountability"}
      %div.wrapper
        %div.controls
          = form_tag(user_subscription_path(current_user, subscription), method: :put) do
            %input{type: "hidden", name: "send_report", value: (subscription.accountability_partners.empty?).to_s}
            %input{type: "checkbox", onChange: "this.form.submit()", id: "report_box",  checked: subscription.accountability_partners.empty? ? nil : "checked"}
            %label{for: "report_box"}= t("plans.email weekly report to a friend", email_address: subscription.user.email)
        %div.info
          %h3= t("plans.accountability")

      - if !subscription.accountability_partners.empty?
        %div.partners
          = form_tag(user_subscription_path(current_user, subscription), method: :put) do
            %input{name: "add_accountability_partner",id: "add_accountability_partner", type: 'search', placeholder: t("plans.add members placeholder")}
            %input{type: 'submit', value: t("plans.add member")}

          %ul
            -subscription.accountability_partners.each do|user_mash|
              %li.user
                - user = User.find(user_mash.id)
                %img.avatar_large{src: user.user_avatar_url["px_48x48"]}
                %span
                  =link_to(user.username == current_user.username ? t("myself") : user.username, @user)
                  =link_to("x", user_subscription_path(current_user, subscription,remove_accountability_partner: user.username),method: :put) if subscription.accountability_partners.count > 1

    %li#unsubscribe
      = button_to(t('plans.stop reading'),user_subscription_path(current_user,subscription), method: :delete, id: "subscription-destroy", class: 'action_button_blue confirm', "data-confirm-text" => t("confirm danger"))

