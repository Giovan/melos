// Reader partial to encapsulate all reader functionality
// Local Parameters
// presenter: (required) Presenter::Reference or Presenter::Subscription

- @is_reader    = true
- reader_menus  = true
- version       = presenter.version
- reference     = presenter.reference
- alt_version   = presenter.respond_to?(:alt_version)   ? presenter.alt_version : nil
- alt_reference = presenter.respond_to?(:alt_reference) ? presenter.alt_reference : nil
- verses        = presenter.respond_to?(:verses)        ? presenter.verses : nil # some of our presenters may not expose the verses (yet)
- focus_verses  = presenter.focus? # for verses focus styling instead of select styling.
- modal_verse   = presenter.respond_to?(:modal_verse)   ? presenter.modal_verse : nil
- a_chapter = presenter.try(:is_chapter?)

= render partial: "/references/reader_header", locals: {reference: reference, version:version, alt_version: alt_version, presenter: presenter}

%article#reader{"data-setting-font" => client_settings.reader_font,
         'data-setting-size' => client_settings.reader_font_size,
         "data-fullscreen"   => client_settings.reader_full_screen,
         "data-selected-verses" => (focus_verses ? nil : verses.try(:join,",")),
         "data-focused-verses" => (focus_verses ? verses.try(:join,",") : nil),
         "data-verse-modal-enabled" => "#{!modal_verse.nil?}",
         "data-book"       => reference[:book].to_s.downcase,
         "data-book-api"   => reference[:book].sub(/[A-Z]+/) {|m| m.downcase},
         "data-book-human" => truncate(version.books[reference[:book]].human, length: 40, separator: " "),
         "data-chapter"    => reference[:chapter].to_s,
         "data-version"    => reference[:version].to_s,
         "data-setting-trans-notes" => client_settings.reader_trans_notes,
         "data-setting-cross-refs" => client_settings.reader_cross_refs,
         "data-setting-show-highlights" => client_settings.reader_highlights,
         "class" => (focus_verses && (not a_chapter)) ? "mute" : nil}
  .wrap
    %div.nav_items
      - direction = 'rtl' if version.try(:rtl?)
      = link_to("previous", bible_path(reference.previous_chapter), class: "nav_prev #{direction}") if reference.previous_chapter
      = link_to("next", bible_path(reference.next_chapter), class: "nav_next #{direction}") if reference.next_chapter

    // Primary version content
    #version_primary{"data-reference"     => reference.to_param,
                     "data-abbreviation"  => version.try(:abbreviation).downcase,
                     "data-usfm"          => reference.chapter_usfm,
                     class:               version.try(:text_direction)}
      = reference.content.html_safe if reference.content

    // Secondary version content
    #version_secondary{"data-reference"     => alt_reference.to_param,
                       "data-abbreviation"  => alt_version.try(:abbreviation).try(:downcase),
                       "data-usfm"          => reference.chapter_usfm,
                       class:               alt_version.try(:text_direction)}
      = t('ref.loading secondary')


%footer
  - if version.has_publisher?
    .publisher.as_table
      .vcenter
        .courtesy
          %strong= t("versions.courtesy of", abbreviation: version.abbreviation, publisher: version.publisher.name) if version.blurb
        .blurb= (version.blurb || version.copyright).try :html_safe
      .vcenter
        =link_to t('versions.learn more'), version.url || version_path(version), class: 'button'


= render partial: "/references/js", locals: {presenter: @presenter}