-# Reader partial to encapsulate all reader functionality
-# Local Parameters
-# presenter: (required) Presenter::Reference or Presenter::Subscription
:ruby
  @is_reader    = true
  @html_classes = []
  @html_classes << "full_screen" if client_settings.reader_full_screen
  @html_classes << "full_screen" << "parallel_mode" if client_settings.reader_parallel_mode
  version       = presenter.version
  reference     = presenter.reference
  alt_version   = presenter.respond_to?(:alt_version)   ? presenter.alt_version : nil
  alt_reference = presenter.respond_to?(:alt_reference) ? presenter.alt_reference : nil
  verses        = presenter.respond_to?(:verses)        ? presenter.verses : nil # some of our presenters may not expose the verses (yet)
  focus_verses  = presenter.focus? # for verses focus styling instead of select styling.
  a_chapter     = presenter.try(:is_chapter?)
  verse_view    = presenter.verses.present? && !presenter.respond_to?(:subscription)

-if (controller_name == 'subscriptions')
  - subscription  = presenter.subscription
  - day           = presenter.day

- content_for :additional_meta do
  = render '/shared/hreflang'
  - ref_deep_link = "#{@presenter.reference.deep_link_path}"
  - deep_link = "youversion://#{ref_deep_link}" if ref_deep_link.present?

  - if ref_deep_link.present?
    %link{rel: "alternate", href: "android-app://com.sirma.mobile.bible.android/youversion/#{ref_deep_link.gsub('version_id','version')}"}

  - if verse_view
    - meta_url = "#{request.protocol}#{request.host_with_port}#{request.fullpath}"
    - meta_description = truncate(get_verse_content(presenter.content), length: 170, separator: " ")
    - @title = truncate("#{reference.human}, #{version} #{meta_description}", length: 200, separator: " ")
    - @subtitle = ''  # we don't want subtitle appended to single verse title so the verse gets more text space
    %meta{name: "twitter:card",             content: "summary"}
    %meta{name: "twitter:url",              content: meta_url}
    %meta{name: "twitter:title" ,           content: @meta_title}
    %meta{name: "twitter:description",      content: meta_description}
    %meta{name: "twitter:site",             content: "@YouVersion"}

    - if deep_link.present?
      %meta{name: "twitter:app:name:iphone",  content:"Bible"}
      %meta{name: "twitter:app:id:iphone",    content:"282935706"}
      %meta{name: "twitter:app:url:iphone",   content: deep_link}
      %meta{name: "twitter:app:name:ipad",    content:"Bible"}
      %meta{name: "twitter:app:id:ipad",      content:"282935706"}
      %meta{name: "twitter:app:url:ipad",     content: deep_link}
      %meta{name: "twitter:app:name:googleplay",  content:"Bible"}
      %meta{name: "twitter:app:id:googleplay",    content:"com.sirma.mobile.bible.android"}
      %meta{name: "twitter:app:url:googleplay",   content: deep_link }

    %meta{property: "og:title",       content: @meta_title }
    %meta{property: "og:url",         content: meta_url }
    %meta{property: "og:description", content: meta_description }
  - else
    -# chapter view eg. jhn.3.kjv
    - meta_url = "#{request.protocol}#{request.host_with_port}#{request.fullpath}"
    %meta{property: "og:title",       content: @meta_title }
    %meta{property: "og:url",         content: meta_url }
    -#%meta{property: "og:description", content: meta_description }

- content_for :twitter_meta do
  %meta{name: "twitter:image", content: url_for(image_path(bible_icon_for_version(size: 120, version: version)))}

- content_for :facebook_meta do
  %meta{property: "og:image",  content: url_for(image_path(bible_icon_for_version(size: 200, version: version)))}

- content_for :meta_description do
  = "#{reference.human}, #{presenter.version} #{truncate(get_verse_content(presenter.content), length: 125, separator: " ", omission: '')}.."

- content_for :mobile_right_nav do
  = link_to(version.abbreviation, 'javascript:void(0);', id: "m_version_btn" )

- content_for :title_link do
  = link_to(reference.human, 'javascript:void(0);', id:"m_book_chap_btn")

= render partial: "references/reader_header", locals: {reference: reference, version:version, alt_version: alt_version, presenter: presenter}

.row.full
  .medium-1.large-3.columns{"ng-hide" => "isParallelMode"}
    - unless (controller_name == 'references' || @sidebar == false || sidebar_presenter.blank?)
      = render partial: sidebar_presenter.sidebar_partial, locals: {presenter: sidebar_presenter}
    &nbsp;

  .medium-10.large-6.columns{class: controller_name == 'plans' ? 'ng-hide' : '', "ng-show" => "!isPlanState || planContentReady", "ng-class" => "{ 'medium-10': !isParallelMode, 'medium-6': isParallelMode, 'large-6': !isParallelMode }"}
    #reader.reader{"reader" => true, "content" => "reader_html", "selection" => "readerSelection", "font-size" => "readerFontSize", "font-family" => "readerFontFamily", "highlights" => "highlights", "bookmarks" => "bookmarks", "show-footnotes" => "showFootnotes"}
      = presenter.content.html_safe if presenter.content
      .copyright
        = (version.blurb || version.copyright).try :html_safe

  - if (controller_name == 'references')
    .medium-10.large-6.columns{"ng-show" => "isParallelMode", "ng-class" => "{ 'medium-10': !isParallelMode, 'medium-6': isParallelMode, 'large-6': !isParallelMode }"}
      #parallel_reader.reader{"reader" => true, "content" => "parallel_reader_html", "selection" => "readerSelection", "font-size" => "readerFontSize", "font-family" => "readerFontFamily", "highlights" => "highlights", "bookmarks" => "bookmarks", "show-footnotes" => "showFootnotes"}

  .medium-1.large-3.columns.verse-action-panels-container{"ng-hide" => "isParallelMode"}
    - if (controller_name != 'references' && right_sidebar_presenter.present?)
      = render partial: right_sidebar_presenter.sidebar_partial, locals: {presenter: sidebar_presenter}
    %div{"fix-top" => true}
      %div{"verse-action" => true, "selection" => "readerSelection", "is-open" => "verseActionOpen", "toggle-side-panel"=>"toggleSidePanel" }
      %div{}
        %span.ng-hide{"ng-show" => "readerSelection.length"}
          %b{"ng-bind" => "readerSelection.length"}
          =t("ui.verses selected")
        %div
          %a.ng-hide{"ng-click"=>"deselectAll()", "ng-show" => "readerSelection.length"}
            =t("ref.clear verses")
        %div{'reader-highlight-panel' => true, "selection" => "readerSelection", "ng-show" => "showReaderHighlight", "version" => "version", "token" => "'#{form_authenticity_token}'", "highlights" => "highlights", "toggle-side-panel"=>"toggleSidePanel", "is-logged-in" => "isLoggedIn"}
        %div{'reader-bookmark-panel' => true, "selection" => "readerSelection", "ng-show" => "showReaderBookmark", "version" => "version", "token" => "'#{form_authenticity_token}'", "bookmarks" => "bookmarks", "toggle-side-panel"=>"toggleSidePanel", "is-logged-in" => "isLoggedIn"}
        %div{'reader-note-panel' => true, "selection" => "readerSelection", "ng-show" => "showReaderNote", "version" => "version", "token" => "'#{form_authenticity_token}'", "notes" => "notes", "toggle-side-panel"=>"toggleSidePanel", "is-logged-in" => "isLoggedIn"}


- if (controller_name == 'subscriptions')
  .row.full.pad-row-top
    .day-controls-box.small-centered.columns.text-center.t-border
      %ul.button-group
        %li
          %a.solid-button.green{"ng-click" => "prevPlanRef('#{subscription_path(user_id: current_user.to_param, id: subscription)}', '#{day.to_s}', '#{form_authenticity_token}')", "ng-disabled" => "devotionalActive"}= 'Previous'
        %li
          %a.solid-button.green{"ng-click" => "nextPlanRef('#{subscription_path(user_id: current_user.to_param, id: subscription)}', '#{day.to_s}', '#{form_authenticity_token}')"}
            %span{'ng-hide' => 'isLastPlanRef'}= 'Next'
            %span.ng-hide{'ng-show' => 'isLastPlanRef'}= 'Finish'

-# =render partial: 'shared/js_templates', locals: { reference: reference }

-#
  %article#reader.reader{"class" => "#{"mute" if focus_verses && (not a_chapter)} #{"verse-view" if verse_view}",
    "data-setting-font" => client_settings.reader_font,
    "data-setting-size" => client_settings.reader_font_size,
    "data-fullscreen"   => client_settings.reader_full_screen,
    "data-focused-verses" => (focus_verses ? verses.try(:join,",") : nil),
    "data-book"       => reference[:book].to_s.downcase,
    "data-book-api"   => reference[:book].sub(/[A-Z]+/) {|m| m.downcase},
    "data-book-human" => truncate(version.books[reference[:book]].human, length: 40, separator: " "),
    "data-chapter"    => reference[:chapter].to_s,
    "data-version"    => reference[:version].to_s,
    "data-setting-trans-notes" => client_settings.reader_trans_notes,
    "data-setting-cross-refs" => client_settings.reader_cross_refs,
    "data-setting-show-highlights" => client_settings.reader_highlights}

    .wrap
      %div.reader-nav
        - direction = 'rtl' if version.try(:rtl?)
        - unless presenter.verses.present?
          = reader_previous_link(reference, {classes: "reader-prev #{direction}"})
          = reader_next_link(reference, {classes: "reader-next #{direction}"})

      // Primary version content
      #version_primary{class: "#{version.try(:text_direction)} #{"verse-view" if verse_view}",
        "data-reference"     => reference.to_param,
        "data-abbreviation"  => version.try(:abbreviation).downcase,
        "data-usfm"          => reference.chapter_usfm}

        = presenter.content.html_safe if presenter.content

      -# Read Chapter button
      - if verse_view
        %h2#read_chapter
          %a.action_button_blue{href: reference_path(reference: reference.chapter_usfm.downcase)}
            -#= t("read chapter")
            = t("read reference", reference: reference.to_chapter.human)

        -#%div.addthis_sharing_toolbox
        %div#download.mobile{href:"/app"}
          -# - style = "background: url(#{image_path(localized_bible_icon(58))}) no-repeat right center" if localized_bible_icon
          -# %span.icon{style: style}
          %a.action_button_blue{href:"/app"}
            = t('mobile page.download now')

      // Secondary version content
      #version_secondary{class: alt_version.try(:text_direction),
        "data-reference"     => alt_reference.to_param,
        "data-abbreviation"  => alt_version.try(:abbreviation).try(:downcase),
        "data-usfm"          => reference.chapter_usfm}
        - unless verse_view
          = t('ref.loading secondary')


  %footer
    - if version.has_publisher?
      .publisher.as_table
        .vcenter
          .courtesy
            %strong= t("versions.courtesy of", abbreviation: version.abbreviation, publisher: version.publisher.name) if version.blurb
          .blurb= (version.blurb || version.copyright).try :html_safe
        .vcenter
          =link_to t('versions.learn more'), version.url || version_path(version), class: 'button'


  = render partial: "references/js", locals: {presenter: @presenter}
