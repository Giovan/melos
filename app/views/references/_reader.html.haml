-# Reader partial to encapsulate all reader functionality
-# Local Parameters
-# presenter: (required) Presenter::Reference or Presenter::Subscription
:ruby
  @is_reader    = true
  @html_classes = []
  @html_classes << "full_screen" if client_settings.reader_full_screen
  @html_classes << "full_screen" << "parallel_mode" if client_settings.reader_parallel_mode
  version       = presenter.version
  reference     = presenter.reference
  alt_version   = presenter.respond_to?(:alt_version)   ? presenter.alt_version : nil
  alt_reference = presenter.respond_to?(:alt_reference) ? presenter.alt_reference : nil
  verses        = presenter.respond_to?(:verses)        ? presenter.verses : nil # some of our presenters may not expose the verses (yet)
  focus_verses  = presenter.focus? # for verses focus styling instead of select styling.
  a_chapter     = presenter.try(:is_chapter?)
  verse_view    = presenter.verses.present? && !presenter.respond_to?(:subscription)

- content_for :additional_meta do
  = render '/shared/hreflang'
  - ref_deep_link = "#{@presenter.reference.deep_link_path}"
  - deep_link = "youversion://#{ref_deep_link}" if ref_deep_link.present?

  - if ref_deep_link.present?
    %meta{name: "apple-itunes-app",         content: "app-id=282935706, app-argument=#{deep_link}"}
    %link{rel: "alternate", href: "android-app://com.sirma.mobile.bible.android/youversion/#{ref_deep_link.gsub('version_id','version')}"}

  - if verse_view
    - meta_url = "#{request.protocol}#{request.host_with_port}#{request.fullpath}"
    - meta_title = @title
    - meta_description = truncate(get_verse_content(presenter.content), length: 200, separator: " ")
    %meta{name: "twitter:card",             content: "summary"}
    %meta{name: "twitter:url",              content: meta_url}
    %meta{name: "twitter:title" ,           content: meta_title}
    %meta{name: "twitter:description",      content: meta_description}
    %meta{name: "twitter:image",            content: "#{url_for(asset_path('Bible-app-icon-english-120x120.png'))}"}
    %meta{name: "twitter:site",             content: "@YouVersion"}

    - if deep_link.present?
      %meta{name: "twitter:app:name:iphone",  content:"Bible"}
      %meta{name: "twitter:app:id:iphone",    content:"282935706"}
      %meta{name: "twitter:app:url:iphone",   content: deep_link}
      %meta{name: "twitter:app:name:ipad",    content:"Bible"}
      %meta{name: "twitter:app:id:ipad",      content:"282935706"}
      %meta{name: "twitter:app:url:ipad",     content: deep_link}
      %meta{name: "twitter:app:name:googleplay",  content:"Bible"}
      %meta{name: "twitter:app:id:googleplay",    content:"com.sirma.mobile.bible.android"}
      %meta{name: "twitter:app:url:googleplay",   content: deep_link }

    %meta{property: "og:title",       content: meta_title }
    %meta{property: "og:url",         content: meta_url }
    %meta{property: "og:description", content: meta_description }
    %meta{property: "og:image", content: "#{url_for(asset_path('Bible-app-icon-english-200x200.png'))}"}

- content_for :meta_description do
  = "#{reference.human} #{presenter.version} #{truncate(get_verse_content(presenter.content), length: 125, separator: " ", omission: '')}.."

- content_for :mobile_right_nav do
  = link_to(version.abbreviation, 'javascript:void(0);', id: "m_version_btn" )

- content_for :title_link do
  = link_to(reference.human, 'javascript:void(0);', id:"m_book_chap_btn")


= render partial: "references/reader_header", locals: {reference: reference, version:version, alt_version: alt_version, presenter: presenter}

%article#reader.reader{"class" => "#{"mute" if focus_verses && (not a_chapter)} #{"verse-view" if verse_view}",
  "data-setting-font" => client_settings.reader_font,
  "data-setting-size" => client_settings.reader_font_size,
  "data-fullscreen"   => client_settings.reader_full_screen,
  "data-focused-verses" => (focus_verses ? verses.try(:join,",") : nil),
  "data-book"       => reference[:book].to_s.downcase,
  "data-book-api"   => reference[:book].sub(/[A-Z]+/) {|m| m.downcase},
  "data-book-human" => truncate(version.books[reference[:book]].human, length: 40, separator: " "),
  "data-chapter"    => reference[:chapter].to_s,
  "data-version"    => reference[:version].to_s,
  "data-setting-trans-notes" => client_settings.reader_trans_notes,
  "data-setting-cross-refs" => client_settings.reader_cross_refs,
  "data-setting-show-highlights" => client_settings.reader_highlights}

  .wrap
    %div.reader-nav
      - direction = 'rtl' if version.try(:rtl?)
      - unless presenter.verses.present?
        = reader_previous_link(reference, {classes: "reader-prev #{direction}"})
        = reader_next_link(reference, {classes: "reader-next #{direction}"})

    // Primary version content
    #version_primary{class: "#{version.try(:text_direction)} #{"verse-view" if verse_view}",
      "data-reference"     => reference.to_param,
      "data-abbreviation"  => version.try(:abbreviation).downcase,
      "data-usfm"          => reference.chapter_usfm}
      
      = presenter.content.html_safe if presenter.content
    
    -# Read Chapter button
    - if verse_view
      %h2#read_chapter
        %a.action_button_blue{href: reference_path(reference: reference.chapter_usfm.downcase)}
          -#= t("read chapter")
          = t("read reference", reference: reference.to_chapter.human)

      -#%div.addthis_sharing_toolbox
      %div#download.mobile{href:"/app"}
        -# - style = "background: url(#{image_path(localized_bible_icon(58))}) no-repeat right center" if localized_bible_icon
        -# %span.icon{style: style}
        %a.action_button_blue{href:"/app"}
          = t('mobile page.download now')

    // Secondary version content
    #version_secondary{class: alt_version.try(:text_direction),
      "data-reference"     => alt_reference.to_param,
      "data-abbreviation"  => alt_version.try(:abbreviation).try(:downcase),
      "data-usfm"          => reference.chapter_usfm}
      - unless verse_view
        = t('ref.loading secondary')


%footer
  - if version.has_publisher?
    .publisher.as_table
      .vcenter
        .courtesy
          %strong= t("versions.courtesy of", abbreviation: version.abbreviation, publisher: version.publisher.name) if version.blurb
        .blurb= (version.blurb || version.copyright).try :html_safe
      .vcenter
        =link_to t('versions.learn more'), version.url || version_path(version), class: 'button'


= render partial: "references/js", locals: {presenter: @presenter}
