From 2d2d3aac5a1a0833db537c23f6db876e30ab1c41 Mon Sep 17 00:00:00 2001
From: Caedmon Judd <caedmon@statebuilt.com>
Date: Mon, 7 Nov 2011 11:00:00 -0600
Subject: [PATCH 49/55] Likes work

---
 app/controllers/notes_controller.rb |    9 ++----
 app/models/like.rb                  |   54 ++++++++++++++++++++++-------------
 app/models/note.rb                  |    6 +++-
 app/views/notes/show.html.haml      |    3 +-
 config/routes.rb                    |    2 +-
 5 files changed, 45 insertions(+), 29 deletions(-)

diff --git a/app/controllers/notes_controller.rb b/app/controllers/notes_controller.rb
index 1496ceb..f98fb4d 100644
--- a/app/controllers/notes_controller.rb
+++ b/app/controllers/notes_controller.rb
@@ -63,13 +63,10 @@ class NotesController < ApplicationController
   end
 
   def like
-    @like = Like.find(params[:id], current_auth)
+    Like.update(params[:id], current_auth)
 
-    if @like.update(params[:id], params[:like_value], current_auth)
-      render action: "show"
-    else
-      #TODO: Complete
-    end
+    @note = Note.find(params[:id], current_auth)
+    render action: "show"
   end
 
   private
diff --git a/app/models/like.rb b/app/models/like.rb
index 8f921f3..30a3ac7 100644
--- a/app/models/like.rb
+++ b/app/models/like.rb
@@ -18,25 +18,34 @@ class Like
     id
   end
 
-  def self.find(user_id, auth = nil)
-    response = YvApi.get('likes/items', user_id: user_id ) do |e|   # anonymous
-      YvApi.get('likes/items', user_id: user_id, auth: auth) do |e| # auth'ed
-        @errors = errors.map { |e| e["error"] }
-        return false
-      end
+  def note
+    Note.find(note_id)
+  end
+
+  def self.for_note(note_id, user_id = nil, auth = nil)
+    @return_like = nil
+
+    response = YvApi.get('likes/items', user_id: user_id) do |e|
+      @errors = errors.map { |e| e["error"] }
+      return false
     end
 
-    #TODO: Add code to find the object in the collection returned in 'response'
+    @likes = build_objects(response.likes, auth)
+    @likes.each do |like|
+      if like.note_id == note_id
+        @return_like = like
+      end
+    end
 
-    #build_objects(response.likes, auth)
+    @return_like
   end
 
-  def find(user_id, auth)
-    self.class.find(user_id, auth)
+  def for_note(note_id, user_id = nil)
+    self.class.for_note(note_id, user_id, auth)
   end
 
-  def self.all
-    response = YvApi.get('likes/items') do |errors|
+  def self.all(user_id = nil)
+    response = YvApi.get('likes/items', user_id: user_id) do |errors|
       @errors = errors.map { |e| e["error"] }
       return false
     end
@@ -44,8 +53,19 @@ class Like
     build_objects(response.likes, nil)
   end
 
-  def all
-    self.class.all
+  def all(user_id = nil)
+    self.class.all(user_id)
+  end
+
+  def self.update(note_id, auth)
+    unless @like = for_note(note_id)
+      @like = Like.new(auth: auth, note_id: note_id)
+      @like.create
+    else
+      @like.auth = auth
+      @like.note_id = note_id
+      @like.destroy
+    end
   end
 
   def create
@@ -59,12 +79,6 @@ class Like
     response
   end
 
-  def update(id, value, auth)
-
-
-
-  end
-
   def destroy
     response = YvApi.post('likes/delete', class_attributes(:note_id, :auth)) do |errors|
       @errors = errors.map { |e| e["error"] }
diff --git a/app/models/note.rb b/app/models/note.rb
index 2fb2bde..16e79b0 100644
--- a/app/models/note.rb
+++ b/app/models/note.rb
@@ -18,7 +18,11 @@ class Note
     puts "listening"
     id    
   end
-  
+
+  def like
+    Like.for_note(id)
+  end
+
   def self.find(id, auth = nil)
     response = YvApi.get('notes/view', id: id ) do |e|   # anonymous    
       YvApi.get('notes/view', id: id, auth: auth) do |e| # auth'ed
diff --git a/app/views/notes/show.html.haml b/app/views/notes/show.html.haml
index 6c3f717..6ad5940 100644
--- a/app/views/notes/show.html.haml
+++ b/app/views/notes/show.html.haml
@@ -1,11 +1,12 @@
 %article
   #note
     %h1= @note.title
-    %p.mute= link_to_references(@note.reference)
+    %p.mute= link_to_references(@note.references)
     %p= raw(@note.content)
     %p
       = label_tag :user_status, "Note Status:"
       = @note.user_status
+      = button_to('like', like_path(@note.id), :method => :put)
     - if current_auth.user_id == @note.user_id.to_i
       = link_to('edit', edit_note_path(@note.id)) 
       = link_to('delete this note', note_path(@note.id), :confirm => 'Are you sure?', :method => :delete) 
diff --git a/config/routes.rb b/config/routes.rb
index 79d6f3e..08d0379 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -4,7 +4,7 @@ YouversionWeb::Application.routes.draw do
   match 'bible(/:reference)' => 'references#show', :as => 'bible', :constraints => {:reference => /.*/}
   resources 'versions', :only => [:index, :show]
   resources 'notes'
-  match 'notes/like' => 'notes#like',    :as => 'like', :via => :put
+  match 'notes/like/:id' => 'notes#like',    :as => 'like', :via => :put
 
   # Users
   resources 'users', :except => [:new, :create] do
-- 
1.7.0.4

