From 18cfbc7250a306607ec8a28e7d4590bd3e0ee35a Mon Sep 17 00:00:00 2001
From: Caedmon Judd <caedmon@statebuilt.com>
Date: Mon, 7 Nov 2011 15:29:00 -0600
Subject: [PATCH 53/55] Likes module

---
 app/cells/likes_list_widget/display.html.haml |    6 ++--
 app/cells/likes_list_widget_cell.rb           |    6 ++--
 app/controllers/notes_controller.rb           |   29 ++++++++++++++++++++++--
 app/models/like.rb                            |   12 +++++-----
 app/models/note.rb                            |   15 +++---------
 app/views/notes/index.html.haml               |    4 +++
 app/views/shared/_header.html.haml            |    2 +-
 lib/model.rb                                  |   12 +++++++++-
 8 files changed, 58 insertions(+), 28 deletions(-)

diff --git a/app/cells/likes_list_widget/display.html.haml b/app/cells/likes_list_widget/display.html.haml
index e930d42..9a29494 100644
--- a/app/cells/likes_list_widget/display.html.haml
+++ b/app/cells/likes_list_widget/display.html.haml
@@ -11,11 +11,11 @@
             %a.more_arrow= link_to "All notes I like", @link
 
       %tbody
-        - likes.first(5).each do |like|
+        - @likes.first(5).each do |like|
           %tr
             %th
               %a
                 %img.avatar_small{src: like.note_user_avatar_url.px_24x24}
             %td
-              %a= link_to like.note_title, note_path(note.id)
-              %p= link_to "By #{@note_username}", user_path(note.note_user_id)
+              %a= link_to like.note_title, note_path(like.note_id)
+              %p= link_to "By #{like.note_username}", user_path(like.note_user_id)
diff --git a/app/cells/likes_list_widget_cell.rb b/app/cells/likes_list_widget_cell.rb
index ae980eb..aea073f 100644
--- a/app/cells/likes_list_widget_cell.rb
+++ b/app/cells/likes_list_widget_cell.rb
@@ -2,10 +2,10 @@ class LikesListWidgetCell < Cell::Rails
   helper ApplicationHelper
 
   def display(opts = {})
-    @notes = opts[:likes].notes
-    @total = opts[:likes].total
+    @likes = opts[:likes]
+    @total = opts[:likes].count
     @title = opts[:title] ||= "Likes"
-    @link = opts[:link] ||= notes_path
+    @link = opts[:link] ||= user_likes_path(opts[:user_id])
     render
   end
 
diff --git a/app/controllers/notes_controller.rb b/app/controllers/notes_controller.rb
index f98fb4d..c8db440 100644
--- a/app/controllers/notes_controller.rb
+++ b/app/controllers/notes_controller.rb
@@ -2,6 +2,7 @@ class NotesController < ApplicationController
   before_filter :set_nav
 
   def index
+    set_sidebar
     if params[:user_id]
       @notes = User.find(params[:user_id].to_i, current_auth).notes
     else
@@ -25,17 +26,21 @@ class NotesController < ApplicationController
   def edit
     if current_auth
       @note = Note.find(params[:id], current_auth)
-      @note.reference = @note.reference.osis_noversion
+      set_for_form(@note)
     else
       redirect_to notes_path
     end    
   end
 
   def create
+    @create_note = nil
     @note = Note.new(params[:note])
     @note.auth = current_auth
 
-    if @note.create
+    if @create_note = @note.create
+      # Reload required in order to show update since form will post
+      # strings instead of the reference / version objects (better way?)
+      @note = @create_note
       render action: "show"
     else
       render action: "new"
@@ -43,9 +48,13 @@ class NotesController < ApplicationController
   end
   
   def update
+    @update_return = nil
     @note = Note.find(params[:id], current_auth)
 
-    if @note.update(params[:id], params[:note])
+    if @update_return = @note.update(params[:id], params[:note])
+      # Reload required in order to show update since form will post
+      # strings instead of the reference / version objects (better way?)
+      @note = @update_return
       render action: "show"
     else
       render action: "edit"
@@ -74,4 +83,18 @@ class NotesController < ApplicationController
   def set_nav
     @nav = :notes
   end
+
+  # Set sidebar values for the Likes cell
+  def set_sidebar
+    @likes = Like.all(current_user.id)
+    @user_id = current_user.id
+  end
+
+  # Setup required in order to show update since form will post
+  # strings instead of the reference / version objects (better way?)
+  def set_for_form(note)
+    note.reference = Model::hash_to_osis_noversion(note.references)
+    note.version = note.version.osis
+  end
+
 end
diff --git a/app/models/like.rb b/app/models/like.rb
index 30a3ac7..5b03fb8 100644
--- a/app/models/like.rb
+++ b/app/models/like.rb
@@ -22,15 +22,15 @@ class Like
     Note.find(note_id)
   end
 
-  def self.for_note(note_id, user_id = nil, auth = nil)
+  def self.for_note(note_id, user_id = nil)
     @return_like = nil
 
-    response = YvApi.get('likes/items', user_id: user_id) do |e|
+    response = YvApi.get('likes/items', user_id: user_id) do |errors|
       @errors = errors.map { |e| e["error"] }
-      return false
+      return nil
     end
 
-    @likes = build_objects(response.likes, auth)
+    @likes = build_objects(response.likes, nil)
     @likes.each do |like|
       if like.note_id == note_id
         @return_like = like
@@ -41,7 +41,7 @@ class Like
   end
 
   def for_note(note_id, user_id = nil)
-    self.class.for_note(note_id, user_id, auth)
+    self.class.for_note(note_id, user_id)
   end
 
   def self.all(user_id = nil)
@@ -58,7 +58,7 @@ class Like
   end
 
   def self.update(note_id, auth)
-    unless @like = for_note(note_id)
+    unless @like = for_note(note_id, auth.user_id)
       @like = Like.new(auth: auth, note_id: note_id)
       @like.create
     else
diff --git a/app/models/note.rb b/app/models/note.rb
index 16e79b0..c3a73d0 100644
--- a/app/models/note.rb
+++ b/app/models/note.rb
@@ -24,8 +24,8 @@ class Note
   end
 
   def self.find(id, auth = nil)
-    response = YvApi.get('notes/view', id: id ) do |e|   # anonymous    
-      YvApi.get('notes/view', id: id, auth: auth) do |e| # auth'ed
+    response = YvApi.get('notes/view', id: id ) do |errors|   # anonymous
+      YvApi.get('notes/view', id: id, auth: auth) do |errors| # auth'ed
         @errors = errors.map { |e| e["error"] }
         return false
       end
@@ -84,10 +84,7 @@ class Note
       @content = @prexml_content
       return false
     end
-    @id = response.id
-    @version = Version.new(response.version)
-    @reference = response.reference
-    response
+    self.class.build_object(response, auth)
   end
 
   def update(id, fields)
@@ -103,9 +100,7 @@ class Note
       @content = @prexml_content
       return false
     end
-    @version = Version.new(response.version)
-    @reference = response.reference
-    response
+    self.class.build_object(response, auth)
   end
 
   def destroy
@@ -124,8 +119,6 @@ class Note
     @note.content = @note.content_text
     @note.references = @note.reference.map { |n| Reference.new("#{n.osis}.#{@note.version}") }
     @note.version = Version.new(@note.version)
-      
-    #@note.reference = Reference.new("#{Model::hash_to_osis(@note.reference)}.#{@note.version.osis}")
     @note
   end
   
diff --git a/app/views/notes/index.html.haml b/app/views/notes/index.html.haml
index 4483172..a016613 100644
--- a/app/views/notes/index.html.haml
+++ b/app/views/notes/index.html.haml
@@ -1,3 +1,7 @@
+- content_for :sidebar do
+  = render_cell :likes_list_widget, :display, likes: @likes, title: "Likes", user_id: @user_id
+  = render '/shared/widget_ad_bible_app'
+
 %article
   - if request.path == user_notes_path(current_user)
     %h1= "My Notes"
diff --git a/app/views/shared/_header.html.haml b/app/views/shared/_header.html.haml
index 494bab8..fee5e1a 100644
--- a/app/views/shared/_header.html.haml
+++ b/app/views/shared/_header.html.haml
@@ -7,7 +7,7 @@
         - if current_auth
           %a#header_profile_trigger{:href => '#'}
             %span
-              %img{:src => './images/andy_avatar.png'}
+              %img{:src => '/images/andy_avatar.png'}
               =current_auth.username
           %ol#header_profile_menu
             %li
diff --git a/lib/model.rb b/lib/model.rb
index 2fc43ae..b865fc2 100644
--- a/lib/model.rb
+++ b/lib/model.rb
@@ -35,5 +35,15 @@ module Model
     end
     return_val[0..-2]
   end
-  
+
+  # PARM (values): Array of Reference hashies
+  # RETURN: String in OSIS format
+  def self.hash_to_osis_noversion(values)
+    return_val = ""
+    values.each do |ref|
+      return_val << "#{ref.osis_noversion}+"
+    end
+    return_val[0..-2]
+  end
+
 end
-- 
1.7.0.4

